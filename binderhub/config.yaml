# https://github.com/jupyterhub/binderhub/blob/master/helm-chart/binderhub/values.yaml
# https://github.com/jupyterhub/mybinder.org-deploy/blob/master/config/prod.yaml
jupyterhub:
  hub:
    baseUrl: /binder/jupyter/
#    nodeSelector:
#      worker1: production
    annotations:
      prometheus.io/path: "/binder/jupyter/hub/metrics"
    deploymentStrategy:
      type: RollingUpdate
    db:
      type: postgres
    resources:
      requests:
        cpu: "0.5"
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 2Gi
    extraConfig:
      neverRestart: |
        c.KubeSpawner.extra_pod_config.update({'restart_policy': 'Never'})

  proxy:
#    nodeSelector:
#      worker1: production
    https:
      enabled: false
    service:
      type: NodePort
      nodePorts:
        http: 30082
    chp:
      resources:
        requests:
          cpu: "0.25"
          memory: 512Mi
        limits:
          cpu: "0.5"
          memory: 512Mi

  singleuser:
    cpu:
      guarantee: 0.2
      limit: 2
    memory:
      guarantee: 2G
      limit: 8G
#    nodeSelector:
#      user: workers

  cull:
    # kill user pods if idle for 30 mins
    # sometimes this has to be run manually:
    # https://github.com/jupyterhub/mybinder.org-deploy/blob/master/scripts/delete-pods.py
    timeout: 1800
    every: 660
    # maxAge is 6 hours: 6 * 3600 = 21600
    maxAge: 21600

build:
  nodeSelector:
    build: workers
  repo2dockerImage: jupyter/repo2docker:32e5ef2
  # to give custom "Binder inaccessible" message (login.html)
  appendix: |
    USER root
    ENV BINDER_URL={binder_url}
    ENV REPO_URL={repo_url}
    RUN cd /tmp \
     && wget -q https://github.com/gesiscss/orc/archive/master.tar.gz -O orc.tar.gz \
     && tar --wildcards -xzf orc.tar.gz --strip 2 */binderhub/appendix\
     && ./appendix/run-appendix \
     && rm -rf orc.tar.gz appendix
    USER $NB_USER

# below is for binder
resources:
  requests:
    cpu: "0.5"
    memory: 1Gi
  limits:
    cpu: "2"
    memory: 2Gi

#nodeSelector:
#  worker1: production

registry:
  enabled: true
  prefix: gesiscss/orc-binder-
  host: https://registry.hub.docker.com
  authHost: https://index.docker.io/v1
  authTokenUrl: https://auth.docker.io/token?service=registry.docker.io

dind:
  enabled: true

imageCleaner:
  enabled: false

service:
  annotations:
    prometheus.io/path: '/binder/metrics'
  type: NodePort
  nodePort: 30081

baseUrl: /binder/

hub:
  url: https://notebooks.gesis.org/binder/jupyter/

template:
  variables:
    is_staging: False
    is_production: True
  path: /etc/binderhub/templates/binderhub/templates
#  static:
#    path: /etc/binderhub/templates/binderhub/static
#    urlPrefix: extra_static/

initContainers:
  - name: git-clone-templates
    image: alpine/git
    args:
      - clone
      - --single-branch
      - --branch=master
      - --
      - https://github.com/gesiscss/orc.git
      - /etc/binderhub/templates
    securityContext:
      runAsUser: 0
    volumeMounts:
      - name: custom-templates
        mountPath: /etc/binderhub/templates
extraVolumes:
  - name: custom-templates
    emptyDir: {}
extraVolumeMounts:
  - name: custom-templates
    mountPath: /etc/binderhub/templates

extraConfig:
  # Add banned repositories to the list below
  # They should be strings that will match "^<org-name>/<repo-name>.*"
  bans: |
    c.GitHubRepoProvider.banned_specs = [
      # e.g. '^org/repo.*',
      '^ines/spacy-binder.*',
      '^soft4voip/rak.*',
    ]
